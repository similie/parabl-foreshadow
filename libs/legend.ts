import { WeatherType } from "@types";

// Define the maximum gray scale value as #CCCCCC (204 in RGB)
export const getGrayScaleHex = (input: number, maxGray = 204) => {
  // Ensure the input is within the range of 0 to 100
  const value = Math.floor(input);
  if (value < 0 || value > 100) {
    return `#FFFFFF`;
  }

  // Define the minimum gray scale value as #FFFFFF (255 in RGB)
  const minGray = 255;
  // Convert the percentage to a scale from 255 to 204
  const grayScale = Math.round(minGray - (value / 100) * (minGray - maxGray));

  // Construct the hex color code
  const hexCode = `#${grayScale.toString(16).padStart(2, "0")}${grayScale
    .toString(16)
    .padStart(2, "0")}${grayScale.toString(16).padStart(2, "0").toUpperCase()}`;

  return hexCode;
};

export type LegendKeyDetails = {
  _min: number;
  _max: number;
  min: (value?: number) => number;
  max: (value?: number) => number;
  unit: string;
  serverValue?: boolean;
  defaultSelection?: boolean;
  unitConvert?: (value: number) => number;
};

const minMaxFunction = (minOrMaxParam: "_min" | "_max") => {
  const key = minOrMaxParam as keyof LegendKeyDetails;
  return function (this: LegendKeyDetails, value?: number) {
    if (typeof value === "number") {
      this[key] = value as never;
    }
    return this[key] as number;
  };
};

export const LegendThresholds: Record<string, LegendKeyDetails[]> = {
  [WeatherType.TOTAL_CLOUD_COVER]: [
    {
      _max: 100,
      _min: 0,
      min: function (value?: number) {
        return minMaxFunction("_min").call(this, value);
      },
      max: function (value?: number) {
        return minMaxFunction("_max").call(this, value);
      },
      unit: "km/h",
      unitConvert: (value: number) => {
        return parseInt(value.toString());
      },
      serverValue: true,
      defaultSelection: true,
    },
  ],
  [WeatherType.WIND_SPEED_GUST]: [
    {
      _max: 94,
      _min: 0,
      min: function (value?: number) {
        return minMaxFunction("_min").call(this, value);
      },
      max: function (value?: number) {
        return minMaxFunction("_max").call(this, value);
      },
      unit: "km/h",
      unitConvert: (value: number) => {
        const metersToKilometers = 0.001;
        const secondsToHours = 3600;
        return parseFloat(
          (value * metersToKilometers * secondsToHours).toFixed(1),
        );
      },
      serverValue: true,
      defaultSelection: true,
    },
    {
      _max: 58,
      _min: 0,
      min: function (value?: number) {
        return minMaxFunction("_min").call(this, value);
      },
      max: function (value?: number) {
        return minMaxFunction("_max").call(this, value);
      },
      unit: "mph",
      unitConvert: (value: number) => {
        const feetPerMeter = 3.28084;
        const hoursInSeconds = 3600;
        const milesPerFoot = 1 / 5280;

        const feetPerSecond = value * feetPerMeter;
        return parseFloat(
          (feetPerSecond * hoursInSeconds * milesPerFoot).toFixed(1),
        );
      },
      serverValue: true,
      defaultSelection: true,
    },
  ],
  [WeatherType.PRECIPITATION_RATE]: [
    {
      _max: 0.02,
      _min: 0,
      min: function (value?: number) {
        return minMaxFunction("_min").call(this, value);
      },
      max: function (value?: number) {
        return minMaxFunction("_max").call(this, value);
      },
      unit: "mm/s",
      serverValue: true,
    },

    {
      _max: 72,
      _min: 0,
      min: function (value?: number) {
        return minMaxFunction("_min").call(this, value);
      },
      max: function (value?: number) {
        return minMaxFunction("_max").call(this, value);
      },
      unit: "mm/hr",
      defaultSelection: true,
      unitConvert: (value) => parseFloat(value.toFixed(1)),
    },
    {
      _max: 2.83,
      _min: 0,
      min: function (value?: number) {
        return minMaxFunction("_min").call(this, value);
      },
      max: function (value?: number) {
        return minMaxFunction("_max").call(this, value);
      },
      unit: "in/hr",
      unitConvert: (value) => parseFloat(((value * 3600) / 25.4).toFixed(1)),
    },
  ],
  [WeatherType.TWO_METER_TEMP]: [
    {
      _min: 225,
      _max: 320,
      min: function (value?: number) {
        console.log("I AM THIS BIG", this);
        return minMaxFunction("_min").call(this, value);
      },
      max: function (value?: number) {
        return minMaxFunction("_max").call(this, value);
      },
      unit: "°K",
      serverValue: true,
    },
    {
      _min: -48,
      _max: 47,
      min: function (value?: number) {
        return minMaxFunction("_min").call(this, value);
      },
      max: function (value?: number) {
        return minMaxFunction("_max").call(this, value);
      },
      unit: "°C",
      defaultSelection: true,
      unitConvert: (value) => parseFloat((value - 273.15).toFixed(1)),
    },
    {
      _min: -128,
      _max: 135,
      min: function (value?: number) {
        return minMaxFunction("_min").call(this, value);
      },
      max: function (value?: number) {
        return minMaxFunction("_max").call(this, value);
      },
      unit: "°F",
      unitConvert: (value) =>
        parseFloat((((value - 273.15) * 9) / 5 + 32).toFixed(1)),
    },
  ],
  [WeatherType.TWO_METER_REL_HUM]: [
    {
      _min: 0,
      _max: 100,
      min: function (value?: number) {
        return minMaxFunction("_min").call(this, value);
      },
      max: function (value?: number) {
        return minMaxFunction("_max").call(this, value);
      },
      unitConvert: (value) => value,
      unit: "%",
    },
  ],
};

const findDefaultThreshold = (key: string) => {
  const threads = LegendThresholds[key];
  return threads.find((threads) => threads.defaultSelection) || threads[0];
};

export const LegendThresholdSelect: Record<
  string,
  (...args: any[]) => LegendKeyDetails
> = {
  [WeatherType.TWO_METER_TEMP]: () => {
    return findDefaultThreshold(WeatherType.TWO_METER_TEMP);
  },
  [WeatherType.PRECIPITATION_RATE]: () => {
    return findDefaultThreshold(WeatherType.PRECIPITATION_RATE);
  },
  [WeatherType.WIND_SPEED_GUST]: () => {
    return findDefaultThreshold(WeatherType.WIND_SPEED_GUST);
  },
  [WeatherType.TWO_METER_REL_HUM]: () => {
    return findDefaultThreshold(WeatherType.TWO_METER_REL_HUM);
  },
  [WeatherType.TOTAL_CLOUD_COVER]: () => {
    return findDefaultThreshold(WeatherType.TOTAL_CLOUD_COVER);
  },
};

export const LegendColors: Record<string, string[]> = {
  [WeatherType.TOTAL_CLOUD_COVER]: [
    "#E1D8E2",
    "#E0D9E2",
    "#DFD9E1",
    "#DED9E0",
    "#DDD9E0",
    "#DBD8DF",
    "#D9D8DE",
    "#D8D7DD",
    "#D6D6DC",
    "#D4D6DB",
    "#D2D5DA",
    "#CFD4D9",
    "#CDD2D8",
    "#CAD1D7",
    "#C7D0D6",
    "#C5CFD4",
    "#C2CDD3",
    "#BFCCD2",
    "#BCCAD1",
    "#B9C9D0",
    "#B6C7CF",
    "#B3C6CE",
    "#B0C4CD",
    "#ADC3CC",
    "#AAC1CB",
    "#A7C0CA",
    "#A4BECA",
    "#A1BCC9",
    "#9EBBC8",
    "#9BB9C8",
    "#98B7C7",
    "#96B5C6",
    "#93B4C6",
    "#92B3C6",
    "#8EB0C5",
    "#8BAEC5",
    "#89ACC4",
    "#88ABC4",
    "#84A9C3",
    "#82A7C3",
    "#80A5C3",
    "#7FA4C2",
    "#7CA1C2",
    "#7A9FC2",
    "#789DC1",
    "#779CC1",
    "#749AC1",
    "#7398C0",
    "#7196C0",
    "#7095C0",
    "#6E92BF",
    "#6D90BF",
    "#6B8EBF",
    "#6B8DBF",
    "#6989BE",
    "#6887BE",
    "#6785BD",
    "#6684BD",
    "#6581BD",
    "#647FBC",
    "#647DBC",
    "#637CBB",
    "#6278BB",
    "#6276BA",
    "#6174BA",
    "#6172B9",
    "#6171B9",
    "#606DB8",
    "#606BB7",
    "#5F69B6",
    "#5F67B6",
    "#5F64B5",
    "#5F62B4",
    "#5F60B3",
    "#5F5EB3",
    "#5E5BB1",
    "#5E59B0",
    "#5E56AF",
    "#5E54AE",
    "#5E51AD",
    "#5E4FAC",
    "#5E4DAA",
    "#5E4BAA",
    "#5D48A7",
    "#5D45A6",
    "#5D43A4",
    "#5D40A3",
    "#5D3EA1",
    "#5C3C9F",
    "#5C399D",
    "#5C389C",
    "#5B3499",
    "#5B3297",
    "#5A3095",
    "#5A2D92",
    "#592B90",
    "#59298D",
    "#58278B",
    "#572589",
    "#562285",
    "#552182",
    "#541F7F",
    "#531D7C",
    "#521B78",
    "#501A75",
    "#4F1972",
    "#4E1870",
    "#4C166B",
    "#4A1567",
    "#491564",
    "#471460",
    "#45135D",
    "#44125A",
    "#421257",
    "#411255",
    "#3E1151",
    "#3D114E",
    "#3B114B",
    "#3A1048",
    "#381046",
    "#371043",
    "#361041",
    "#351040",
    "#33113D",
    "#32113B",
    "#32113A",
    "#301238",
    "#2F1337",
    "#2F1336",
    "#311236",
    "#321237",
    "#331137",
    "#341137",
    "#361138",
    "#371139",
    "#391139",
    "#3B113A",
    "#3D113B",
    "#3F113C",
    "#41113D",
    "#43123E",
    "#45123F",
    "#471240",
    "#4A1341",
    "#4C1342",
    "#4F1443",
    "#511444",
    "#541545",
    "#551546",
    "#591647",
    "#5C1648",
    "#5E1749",
    "#61184A",
    "#63184B",
    "#66194C",
    "#691A4C",
    "#6B1A4D",
    "#6E1B4E",
    "#711C4E",
    "#731D4E",
    "#761E4F",
    "#781F4F",
    "#7B204F",
    "#7D2150",
    "#7F2250",
    "#822450",
    "#842550",
    "#872750",
    "#892850",
    "#8B2A50",
    "#8D2C50",
    "#902D50",
    "#922F4F",
    "#94314F",
    "#96324F",
    "#98344F",
    "#9A364F",
    "#9B384F",
    "#9D3A4F",
    "#9F3C4F",
    "#A03D4F",
    "#A2404F",
    "#A4424F",
    "#A6444F",
    "#A7464F",
    "#A94950",
    "#AA4B50",
    "#AC4D50",
    "#AD4F50",
    "#AF5151",
    "#B05451",
    "#B25652",
    "#B35852",
    "#B45A53",
    "#B55D53",
    "#B65F54",
    "#B76054",
    "#B96456",
    "#BA6657",
    "#BB6857",
    "#BC6B59",
    "#BD6D5A",
    "#BE705B",
    "#BF725C",
    "#C0745D",
    "#C0775F",
    "#C17960",
    "#C27C62",
    "#C37E64",
    "#C38166",
    "#C48368",
    "#C5866A",
    "#C5876B",
    "#C68B6E",
    "#C78D70",
    "#C78F72",
    "#C89275",
    "#C89478",
    "#C9977A",
    "#C9997D",
    "#CA9C80",
    "#CA9E83",
    "#CBA185",
    "#CCA389",
    "#CCA58C",
    "#CDA88F",
    "#CDAA92",
    "#CEAC95",
    "#CEAE97",
    "#CFB19C",
    "#D0B39F",
    "#D1B6A3",
    "#D2B8A6",
    "#D3BAA9",
    "#D3BCAD",
    "#D4BEB0",
    "#D5C0B4",
    "#D6C2B7",
    "#D7C4BB",
    "#D8C6BE",
    "#D9C8C1",
    "#DACAC4",
    "#DBCCC8",
    "#DBCECB",
    "#DCCECC",
    "#DDD1D0",
    "#DED2D3",
    "#DED3D5",
    "#DFD5D7",
    "#DFD6D9",
    "#E0D6DB",
    "#E0D7DD",
    "#E1D8DE",
    "#E1D8DF",
    "#E1D8E1",
    "#E1D8E1",
  ],
  [WeatherType.TWO_METER_REL_HUM]: [
    "#FFFFD9",
    "#FEFED7",
    "#FDFED6",
    "#FDFED5",
    "#FCFED3",
    "#FCFDD2",
    "#FBFDD1",
    "#FBFDD0",
    "#FAFDCE",
    "#F9FDCD",
    "#F9FCCC",
    "#F8FCCB",
    "#F8FCC9",
    "#F7FCC8",
    "#F7FBC7",
    "#F6FBC6",
    "#F5FBC4",
    "#F5FBC3",
    "#F4FBC2",
    "#F4FAC1",
    "#F3FABF",
    "#F3FABE",
    "#F2FABD",
    "#F2F9BC",
    "#F1F9BA",
    "#F0F9B9",
    "#F0F9B8",
    "#EFF9B7",
    "#EFF8B5",
    "#EEF8B4",
    "#EEF8B3",
    "#EDF8B2",
    "#ECF7B1",
    "#EBF7B1",
    "#EAF7B1",
    "#E9F6B1",
    "#E8F6B1",
    "#E6F5B1",
    "#E5F5B1",
    "#E4F4B1",
    "#E3F4B1",
    "#E2F3B1",
    "#E0F3B1",
    "#DFF2B2",
    "#DEF2B2",
    "#DDF1B2",
    "#DCF1B2",
    "#DAF0B2",
    "#D9F0B2",
    "#D8EFB2",
    "#D7EFB2",
    "#D6EFB2",
    "#D5EEB2",
    "#D3EEB2",
    "#D2EDB3",
    "#D1EDB3",
    "#D0ECB3",
    "#CFECB3",
    "#CDEBB3",
    "#CCEBB3",
    "#CBEAB3",
    "#CAEAB3",
    "#C9E9B3",
    "#C7E9B3",
    "#C6E8B4",
    "#C4E7B4",
    "#C1E7B4",
    "#BFE6B4",
    "#BDE5B4",
    "#BBE4B5",
    "#B8E3B5",
    "#B6E2B5",
    "#B4E1B5",
    "#B2E0B6",
    "#AFDFB6",
    "#ADDFB6",
    "#ABDEB6",
    "#A9DDB6",
    "#A6DCB7",
    "#A4DBB7",
    "#A2DAB7",
    "#A0D9B7",
    "#9DD8B8",
    "#9BD8B8",
    "#99D7B8",
    "#97D6B8",
    "#94D5B8",
    "#92D4B9",
    "#90D3B9",
    "#8DD2B9",
    "#8BD1B9",
    "#89D1B9",
    "#87D0BA",
    "#84CFBA",
    "#82CEBA",
    "#80CDBA",
    "#7ECCBB",
    "#7CCCBB",
    "#7ACBBB",
    "#78CABB",
    "#76C9BC",
    "#74C9BC",
    "#72C8BC",
    "#70C7BD",
    "#6EC6BD",
    "#6CC6BD",
    "#6AC5BD",
    "#68C4BE",
    "#66C4BE",
    "#64C3BE",
    "#63C2BF",
    "#61C1BF",
    "#5FC1BF",
    "#5DC0BF",
    "#5BBFC0",
    "#59BFC0",
    "#57BEC0",
    "#55BDC1",
    "#53BCC1",
    "#51BCC1",
    "#4FBBC1",
    "#4DBAC2",
    "#4BB9C2",
    "#49B9C2",
    "#47B8C3",
    "#45B7C3",
    "#43B7C3",
    "#41B6C3",
    "#40B5C3",
    "#3FB4C3",
    "#3EB3C3",
    "#3DB1C3",
    "#3BB0C3",
    "#3AAFC3",
    "#39AEC3",
    "#38ADC3",
    "#37ACC2",
    "#36AAC2",
    "#35A9C2",
    "#34A8C2",
    "#32A7C2",
    "#31A6C2",
    "#30A5C2",
    "#2FA4C2",
    "#2EA2C1",
    "#2DA1C1",
    "#2CA0C1",
    "#2A9FC1",
    "#299EC1",
    "#289DC1",
    "#279BC1",
    "#269AC1",
    "#2599C0",
    "#2498C0",
    "#2397C0",
    "#2196C0",
    "#2094C0",
    "#1F93C0",
    "#1E92C0",
    "#1D91C0",
    "#1D90BF",
    "#1D8EBE",
    "#1D8CBE",
    "#1D8BBD",
    "#1D89BC",
    "#1D88BB",
    "#1E86BB",
    "#1E84BA",
    "#1E83B9",
    "#1E81B8",
    "#1E80B8",
    "#1E7EB7",
    "#1E7CB6",
    "#1F7BB5",
    "#1F79B4",
    "#1F78B4",
    "#1F76B3",
    "#1F74B2",
    "#1F73B1",
    "#2071B1",
    "#2070B0",
    "#206EAF",
    "#206CAE",
    "#206BAE",
    "#2069AD",
    "#2168AC",
    "#2166AB",
    "#2164AB",
    "#2163AA",
    "#2161A9",
    "#2160A8",
    "#215EA8",
    "#225DA7",
    "#225BA6",
    "#225AA6",
    "#2259A5",
    "#2257A5",
    "#2256A4",
    "#2255A3",
    "#2253A3",
    "#2252A2",
    "#2251A1",
    "#234FA1",
    "#234EA0",
    "#234DA0",
    "#234B9F",
    "#234A9E",
    "#23499E",
    "#23479D",
    "#23469C",
    "#23459C",
    "#23439B",
    "#23429A",
    "#24419A",
    "#244099",
    "#243E99",
    "#243D98",
    "#243C97",
    "#243A97",
    "#243996",
    "#243895",
    "#243695",
    "#243594",
    "#243494",
    "#243392",
    "#233290",
    "#22318E",
    "#21318C",
    "#20308A",
    "#1F2F88",
    "#1E2F87",
    "#1D2E85",
    "#1C2D83",
    "#1C2C81",
    "#1B2C7F",
    "#1A2B7D",
    "#192A7B",
    "#182979",
    "#172978",
    "#162876",
    "#152774",
    "#142772",
    "#132670",
    "#12256E",
    "#12246C",
    "#11246A",
    "#102368",
    "#0F2267",
    "#0E2265",
    "#0D2163",
    "#0C2061",
    "#0B1F5F",
    "#0A1F5D",
    "#091E5B",
    "#081D59",
    "#081D58",
  ],
  [WeatherType.WIND_SPEED_GUST]: [
    "#440154",
    "#440255",
    "#440357",
    "#450558",
    "#45065A",
    "#45085B",
    "#46095C",
    "#460B5E",
    "#460C5F",
    "#460E61",
    "#470F62",
    "#471163",
    "#471265",
    "#471466",
    "#471567",
    "#471669",
    "#47186A",
    "#48196B",
    "#481A6C",
    "#481C6E",
    "#481D6F",
    "#481E70",
    "#482071",
    "#482172",
    "#482273",
    "#482374",
    "#472575",
    "#472676",
    "#472777",
    "#472878",
    "#472A79",
    "#472B7A",
    "#472C7B",
    "#462D7C",
    "#462F7C",
    "#46307D",
    "#46317E",
    "#45327F",
    "#45347F",
    "#453580",
    "#453681",
    "#443781",
    "#443982",
    "#433A83",
    "#433B83",
    "#433C84",
    "#423D84",
    "#423E85",
    "#424085",
    "#414186",
    "#414286",
    "#404387",
    "#404487",
    "#3F4587",
    "#3F4788",
    "#3E4888",
    "#3E4989",
    "#3D4A89",
    "#3D4B89",
    "#3D4C89",
    "#3C4D8A",
    "#3C4E8A",
    "#3B508A",
    "#3B518A",
    "#3A528B",
    "#3A538B",
    "#39548B",
    "#39558B",
    "#38568B",
    "#38578C",
    "#37588C",
    "#37598C",
    "#365A8C",
    "#365B8C",
    "#355C8C",
    "#355D8C",
    "#345E8D",
    "#345F8D",
    "#33608D",
    "#33618D",
    "#32628D",
    "#32638D",
    "#31648D",
    "#31658D",
    "#31668D",
    "#30678D",
    "#30688D",
    "#2F698D",
    "#2F6A8D",
    "#2E6B8E",
    "#2E6C8E",
    "#2E6D8E",
    "#2D6E8E",
    "#2D6F8E",
    "#2C708E",
    "#2C718E",
    "#2C728E",
    "#2B738E",
    "#2B748E",
    "#2A758E",
    "#2A768E",
    "#2A778E",
    "#29788E",
    "#29798E",
    "#287A8E",
    "#287A8E",
    "#287B8E",
    "#277C8E",
    "#277D8E",
    "#277E8E",
    "#267F8E",
    "#26808E",
    "#26818E",
    "#25828E",
    "#25838D",
    "#24848D",
    "#24858D",
    "#24868D",
    "#23878D",
    "#23888D",
    "#23898D",
    "#22898D",
    "#228A8D",
    "#228B8D",
    "#218C8D",
    "#218D8C",
    "#218E8C",
    "#208F8C",
    "#20908C",
    "#20918C",
    "#1F928C",
    "#1F938B",
    "#1F948B",
    "#1F958B",
    "#1F968B",
    "#1E978A",
    "#1E988A",
    "#1E998A",
    "#1E998A",
    "#1E9A89",
    "#1E9B89",
    "#1E9C89",
    "#1E9D88",
    "#1E9E88",
    "#1E9F88",
    "#1EA087",
    "#1FA187",
    "#1FA286",
    "#1FA386",
    "#20A485",
    "#20A585",
    "#21A685",
    "#21A784",
    "#22A784",
    "#23A883",
    "#23A982",
    "#24AA82",
    "#25AB81",
    "#26AC81",
    "#27AD80",
    "#28AE7F",
    "#29AF7F",
    "#2AB07E",
    "#2BB17D",
    "#2CB17D",
    "#2EB27C",
    "#2FB37B",
    "#30B47A",
    "#32B57A",
    "#33B679",
    "#35B778",
    "#36B877",
    "#38B976",
    "#39B976",
    "#3BBA75",
    "#3DBB74",
    "#3EBC73",
    "#40BD72",
    "#42BE71",
    "#44BE70",
    "#45BF6F",
    "#47C06E",
    "#49C16D",
    "#4BC26C",
    "#4DC26B",
    "#4FC369",
    "#51C468",
    "#53C567",
    "#55C666",
    "#57C665",
    "#59C764",
    "#5BC862",
    "#5EC961",
    "#60C960",
    "#62CA5F",
    "#64CB5D",
    "#67CC5C",
    "#69CC5B",
    "#6BCD59",
    "#6DCE58",
    "#70CE56",
    "#72CF55",
    "#74D054",
    "#77D052",
    "#79D151",
    "#7CD24F",
    "#7ED24E",
    "#81D34C",
    "#83D34B",
    "#86D449",
    "#88D547",
    "#8BD546",
    "#8DD644",
    "#90D643",
    "#92D741",
    "#95D73F",
    "#97D83E",
    "#9AD83C",
    "#9DD93A",
    "#9FD938",
    "#A2DA37",
    "#A5DA35",
    "#A7DB33",
    "#AADB32",
    "#ADDC30",
    "#AFDC2E",
    "#B2DD2C",
    "#B5DD2B",
    "#B7DD29",
    "#BADE27",
    "#BDDE26",
    "#BFDF24",
    "#C2DF22",
    "#C5DF21",
    "#C7E01F",
    "#CAE01E",
    "#CDE01D",
    "#CFE11C",
    "#D2E11B",
    "#D4E11A",
    "#D7E219",
    "#DAE218",
    "#DCE218",
    "#DFE318",
    "#E1E318",
    "#E4E318",
    "#E7E419",
    "#E9E419",
    "#ECE41A",
    "#EEE51B",
    "#F1E51C",
    "#F3E51E",
    "#F6E61F",
    "#F8E621",
    "#FAE622",
    "#FDE724",
  ],
  [WeatherType.PRECIPITATION_RATE]: [
    "#FFFFFF",
    "#7F00FF",
    "#7D03FE",
    "#7B06FE",
    "#7909FE",
    "#770CFE",
    "#750FFE",
    "#7312FE",
    "#7115FE",
    "#6F19FE",
    "#6D1CFE",
    "#6B1FFE",
    "#6922FE",
    "#6725FE",
    "#6528FE",
    "#632BFE",
    "#612EFD",
    "#5F31FD",
    "#5D35FD",
    "#5B38FD",
    "#593BFD",
    "#573EFD",
    "#5541FC",
    "#5344FC",
    "#5147FC",
    "#4F4AFC",
    "#4D4DFB",
    "#4B50FB",
    "#4953FB",
    "#4756FB",
    "#4559FA",
    "#435CFA",
    "#415FFA",
    "#3F61FA",
    "#3D64F9",
    "#3B67F9",
    "#396AF9",
    "#376DF8",
    "#3570F8",
    "#3373F8",
    "#3175F7",
    "#2F78F7",
    "#2D7BF6",
    "#2B7EF6",
    "#2980F6",
    "#2783F5",
    "#2586F5",
    "#2388F4",
    "#218BF4",
    "#1F8EF3",
    "#1D90F3",
    "#1B93F3",
    "#1995F2",
    "#1798F2",
    "#159AF1",
    "#139DF1",
    "#119FF0",
    "#0FA2EF",
    "#0DA4EF",
    "#0BA7EE",
    "#09A9EE",
    "#07ABED",
    "#05AEED",
    "#03B0EC",
    "#01B2EC",
    "#00B4EB",
    "#02B7EA",
    "#04B9EA",
    "#06BBE9",
    "#08BDE8",
    "#0ABFE8",
    "#0CC1E7",
    "#0EC3E6",
    "#10C5E6",
    "#12C7E5",
    "#14C9E4",
    "#16CBE4",
    "#18CDE3",
    "#1ACFE2",
    "#1CD1E2",
    "#1ED2E1",
    "#20D4E0",
    "#22D6DF",
    "#24D7DF",
    "#26D9DE",
    "#28DBDD",
    "#2ADCDC",
    "#2CDEDC",
    "#2EDFDB",
    "#30E1DA",
    "#32E2D9",
    "#34E4D8",
    "#36E5D7",
    "#38E6D7",
    "#3AE8D6",
    "#3CE9D5",
    "#3EEAD4",
    "#40ECD3",
    "#42EDD2",
    "#44EED1",
    "#46EFD1",
    "#48F0D0",
    "#4AF1CF",
    "#4CF2CE",
    "#4EF3CD",
    "#50F4CC",
    "#52F5CB",
    "#54F6CA",
    "#56F6C9",
    "#58F7C8",
    "#5AF8C7",
    "#5CF9C6",
    "#5EF9C5",
    "#60FAC4",
    "#62FAC3",
    "#64FBC2",
    "#66FBC1",
    "#68FCC0",
    "#6AFCBF",
    "#6CFDBE",
    "#6EFDBD",
    "#70FDBC",
    "#72FEBB",
    "#74FEBA",
    "#76FEB9",
    "#78FEB8",
    "#7AFEB7",
    "#7CFEB5",
    "#7EFEB4",
    "#80FEB3",
    "#82FEB2",
    "#84FEB1",
    "#86FEB0",
    "#88FEAF",
    "#8AFEAE",
    "#8CFEAC",
    "#8EFDAB",
    "#90FDAA",
    "#92FDA9",
    "#94FCA8",
    "#96FCA7",
    "#98FBA5",
    "#9AFBA4",
    "#9CFAA3",
    "#9EFAA2",
    "#A0F9A1",
    "#A2F99F",
    "#A4F89E",
    "#A6F79D",
    "#A8F69C",
    "#AAF69A",
    "#ACF599",
    "#AEF498",
    "#B0F397",
    "#B2F295",
    "#B4F194",
    "#B6F093",
    "#B8EF92",
    "#BAEE90",
    "#BCED8F",
    "#BEEC8E",
    "#C0EA8C",
    "#C2E98B",
    "#C4E88A",
    "#C6E688",
    "#C8E587",
    "#CAE486",
    "#CCE284",
    "#CEE183",
    "#D0DF82",
    "#D2DE80",
    "#D4DC7F",
    "#D6DB7E",
    "#D8D97C",
    "#DAD77B",
    "#DCD67A",
    "#DED478",
    "#E0D277",
    "#E2D175",
    "#E4CF74",
    "#E6CD73",
    "#E8CB71",
    "#EAC970",
    "#ECC76E",
    "#EEC56D",
    "#F0C36C",
    "#F2C16A",
    "#F4BF69",
    "#F6BD67",
    "#F8BB66",
    "#FAB964",
    "#FCB763",
    "#FEB461",
    "#FFB260",
    "#FFB05F",
    "#FFAE5D",
    "#FFAB5C",
    "#FFA95A",
    "#FFA759",
    "#FFA457",
    "#FFA256",
    "#FF9F54",
    "#FF9D53",
    "#FF9A51",
    "#FF9850",
    "#FF954E",
    "#FF934D",
    "#FF904B",
    "#FF8E4A",
    "#FF8B48",
    "#FF8847",
    "#FF8645",
    "#FF8344",
    "#FF8042",
    "#FF7E41",
    "#FF7B3F",
    "#FF783E",
    "#FF753C",
    "#FF733B",
    "#FF7039",
    "#FF6D38",
    "#FF6A36",
    "#FF6735",
    "#FF6433",
    "#FF6131",
    "#FF5F30",
    "#FF5C2E",
    "#FF592D",
    "#FF562B",
    "#FF532A",
    "#FF5028",
    "#FF4D27",
    "#FF4A25",
    "#FF4724",
    "#FF4422",
    "#FF4120",
    "#FF3E1F",
    "#FF3B1D",
    "#FF381C",
    "#FF351A",
    "#FF3119",
    "#FF2E17",
    "#FF2B15",
    "#FF2814",
    "#FF2512",
    "#FF2211",
    "#FF1F0F",
    "#FF1C0E",
    "#FF190C",
    "#FF150A",
    "#FF1209",
    "#FF0F07",
    "#FF0C06",
    "#FF0904",
    "#FF0603",
    "#FF0301",
    "#FF0000",
  ],
  [WeatherType.TWO_METER_TEMP]: [
    "#00007F",
    "#000084",
    "#000088",
    "#00008D",
    "#000091",
    "#000096",
    "#00009A",
    "#00009F",
    "#0000A3",
    "#0000A8",
    "#0000AC",
    "#0000B1",
    "#0000B6",
    "#0000BA",
    "#0000BF",
    "#0000C3",
    "#0000C8",
    "#0000CC",
    "#0000D1",
    "#0000D5",
    "#0000DA",
    "#0000DE",
    "#0000E3",
    "#0000E8",
    "#0000EC",
    "#0000F1",
    "#0000F5",
    "#0000FA",
    "#0000FE",
    "#0000FF",
    "#0000FF",
    "#0000FF",
    "#0000FF",
    "#0004FF",
    "#0008FF",
    "#000CFF",
    "#0010FF",
    "#0014FF",
    "#0018FF",
    "#001CFF",
    "#0020FF",
    "#0024FF",
    "#0028FF",
    "#002CFF",
    "#0030FF",
    "#0034FF",
    "#0038FF",
    "#003CFF",
    "#0040FF",
    "#0044FF",
    "#0048FF",
    "#004CFF",
    "#0050FF",
    "#0054FF",
    "#0058FF",
    "#005CFF",
    "#0060FF",
    "#0064FF",
    "#0068FF",
    "#006CFF",
    "#0070FF",
    "#0074FF",
    "#0078FF",
    "#007CFF",
    "#0080FF",
    "#0084FF",
    "#0088FF",
    "#008CFF",
    "#0090FF",
    "#0094FF",
    "#0098FF",
    "#009CFF",
    "#00A0FF",
    "#00A4FF",
    "#00A8FF",
    "#00ACFF",
    "#00B0FF",
    "#00B4FF",
    "#00B8FF",
    "#00BCFF",
    "#00C0FF",
    "#00C4FF",
    "#00C8FF",
    "#00CCFF",
    "#00D0FF",
    "#00D4FF",
    "#00D8FF",
    "#00DCFE",
    "#00E0FA",
    "#00E4F7",
    "#02E8F4",
    "#05ECF1",
    "#08F0ED",
    "#0CF4EA",
    "#0FF8E7",
    "#12FCE4",
    "#15FFE1",
    "#18FFDD",
    "#1CFFDA",
    "#1FFFD7",
    "#22FFD4",
    "#25FFD0",
    "#29FFCD",
    "#2CFFCA",
    "#2FFFC7",
    "#32FFC3",
    "#36FFC0",
    "#39FFBD",
    "#3CFFBA",
    "#3FFFB7",
    "#42FFB3",
    "#46FFB0",
    "#49FFAD",
    "#4CFFAA",
    "#4FFFA6",
    "#53FFA3",
    "#56FFA0",
    "#59FF9D",
    "#5CFF9A",
    "#5FFF96",
    "#63FF93",
    "#66FF90",
    "#69FF8D",
    "#6CFF89",
    "#70FF86",
    "#73FF83",
    "#76FF80",
    "#79FF7D",
    "#7CFF79",
    "#80FF76",
    "#83FF73",
    "#86FF70",
    "#89FF6C",
    "#8DFF69",
    "#90FF66",
    "#93FF63",
    "#96FF5F",
    "#9AFF5C",
    "#9DFF59",
    "#A0FF56",
    "#A3FF53",
    "#A6FF4F",
    "#AAFF4C",
    "#ADFF49",
    "#B0FF46",
    "#B3FF42",
    "#B7FF3F",
    "#BAFF3C",
    "#BDFF39",
    "#C0FF36",
    "#C3FF32",
    "#C7FF2F",
    "#CAFF2C",
    "#CDFF29",
    "#D0FF25",
    "#D4FF22",
    "#D7FF1F",
    "#DAFF1C",
    "#DDFF18",
    "#E0FF15",
    "#E4FF12",
    "#E7FF0F",
    "#EAFF0C",
    "#EDFF08",
    "#F1FC05",
    "#F4F802",
    "#F7F400",
    "#FAF000",
    "#FEED00",
    "#FFE900",
    "#FFE500",
    "#FFE200",
    "#FFDE00",
    "#FFDA00",
    "#FFD700",
    "#FFD300",
    "#FFCF00",
    "#FFCB00",
    "#FFC800",
    "#FFC400",
    "#FFC000",
    "#FFBD00",
    "#FFB900",
    "#FFB500",
    "#FFB100",
    "#FFAE00",
    "#FFAA00",
    "#FFA600",
    "#FFA300",
    "#FF9F00",
    "#FF9B00",
    "#FF9800",
    "#FF9400",
    "#FF9000",
    "#FF8C00",
    "#FF8900",
    "#FF8500",
    "#FF8100",
    "#FF7E00",
    "#FF7A00",
    "#FF7600",
    "#FF7300",
    "#FF6F00",
    "#FF6B00",
    "#FF6700",
    "#FF6400",
    "#FF6000",
    "#FF5C00",
    "#FF5900",
    "#FF5500",
    "#FF5100",
    "#FF4D00",
    "#FF4A00",
    "#FF4600",
    "#FF4200",
    "#FF3F00",
    "#FF3B00",
    "#FF3700",
    "#FF3400",
    "#FF3000",
    "#FF2C00",
    "#FF2800",
    "#FF2500",
    "#FF2100",
    "#FF1D00",
    "#FF1A00",
    "#FF1600",
    "#FE1200",
    "#FA0F00",
    "#F50B00",
    "#F10700",
    "#EC0300",
    "#E80000",
    "#E30000",
    "#DE0000",
    "#DA0000",
    "#D50000",
    "#D10000",
    "#CC0000",
    "#C80000",
    "#C30000",
    "#BF0000",
    "#BA0000",
    "#B60000",
    "#B10000",
    "#AC0000",
    "#A80000",
    "#A30000",
    "#9F0000",
    "#9A0000",
    "#960000",
    "#910000",
    "#8D0000",
    "#880000",
    "#840000",
    "#7F0000",
  ],
};
